<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小卢同学</title>
  
  <subtitle>一个正在努力的前端小白</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-06-11T02:46:23.153Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>小卢同学</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>基于hexo和github搭建的博客（进阶）</title>
    <link href="http://yoursite.com/2018/06/11/hexo%E8%BF%9B%E9%98%B6/"/>
    <id>http://yoursite.com/2018/06/11/hexo进阶/</id>
    <published>2018-06-11T01:25:11.000Z</published>
    <updated>2018-06-11T02:46:23.153Z</updated>
    
    <content type="html"><![CDATA[<p>本文参考自：<a href="https://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html" target="_blank" rel="noopener">https://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html</a> （转载请标明出处）</p><h2 id="1-修改主题"><a href="#1-修改主题" class="headerlink" title="1.修改主题"></a>1.修改主题</h2><a id="more"></a><p>​    既然默认主题很丑，那我们别的不做，首先来替换一个好看点的主题。这是 <a href="https://hexo.io/themes/" target="_blank" rel="noopener">官方主题</a></p><p>​    个人比较喜欢的2个主题：<a href="https://github.com/pinggod/hexo-theme-jekyll" target="_blank" rel="noopener">hexo-theme-jekyll</a> 和 <a href="https://github.com/litten/hexo-theme-yilia" target="_blank" rel="noopener">hexo-theme-yilia</a>。</p><p>​    首先下载这个主题：(这里我使用的是<a href="https://github.com/litten/hexo-theme-yilia" target="_blank" rel="noopener">hexo-theme-yilia</a>)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd /d/blog</span><br><span class="line">$ git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia</span><br></pre></td></tr></table></figure><p><img src="/2018/06/11/hexo进阶/1.png" alt="&quot;下载的主题&quot;"></p><p>修改<code>_config.yml</code>中的<code>theme: landscape</code>改为<code>theme: yilia</code>，然后重新执行<code>hexo g</code>来重新生成。</p><p>如果出现一些莫名其妙的问题，可以先执行<code>hexo clean</code>来清理一下public的内容，然后再来重新生成和发布。</p><h2 id="2-上传之前"><a href="#2-上传之前" class="headerlink" title="2.上传之前"></a>2.上传之前</h2><p>​    在上传代码到github之前，一定要记得先把你以前所有代码下载下来（虽然github有版本管理，但备份一下总是好的），因为从hexo提交代码时会把你以前的所有代码都删掉。</p><h2 id="3-上传到github"><a href="#3-上传到github" class="headerlink" title="3.上传到github"></a>3.上传到github</h2><p>​    如果你一切都配置好了，发布上传很容易，一句<code>hexo d</code>就搞定，当然关键还是你要把所有东西配置好。</p><p>​    首先，<code>ssh key</code>肯定要配置好。</p><p>​    其次，配置<code>_config.yml</code>中有关deploy的部分：</p><p>​    （上文中有提到，但是还是怕大家有小问题，这里特别注意一下）</p><p>​    正确写法：</p><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="keyword">type</span>: git</span><br><span class="line">  repository: git<span class="meta">@github</span>.com:lujiuxiang/lujiuxiang.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>​    错误写法：</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">deploy</span>:</span><br><span class="line">  <span class="attribute">type</span>: github</span><br><span class="line">  <span class="attribute">repository</span>: <span class="attribute">https</span>:<span class="comment">//github.com/lujiuxiang/lujiuxiang.github.io.git</span></span><br><span class="line">  <span class="attribute">branch</span>: master</span><br></pre></td></tr></table></figure><p>后面一种写法是hexo2.x的写法，现在已经不行了，无论是哪种写法，此时直接执行<code>hexo d</code>的话一般会报如下错误：</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Deployer <span class="keyword">not</span> found: github 或者 Deployer <span class="keyword">not</span> found: git</span><br></pre></td></tr></table></figure><p>原因是还需要安装一个插件：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install</span> hexo-deployer-git <span class="comment">--save</span></span><br></pre></td></tr></table></figure><p>其它命令不确定，部署这个命令一定要用git bash，否则会提示<code>Permission denied (publickey).</code></p><p>打开你的git bash，输入<code>hexo d</code>就会将本次有改动的代码全部提交，没有改动的不会：</p><p><img src="/2018/06/11/hexo进阶/2.png" alt="&#39;提交完成&#39;"></p><h2 id="4-常见的hexo命令"><a href="#4-常见的hexo命令" class="headerlink" title="4.常见的hexo命令"></a>4.常见的hexo命令</h2><p>常见命令：</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">hexo <span class="keyword">new</span> <span class="string">"postName"</span> <span class="meta">#新建文章</span></span><br><span class="line">hexo <span class="keyword">new</span> page <span class="string">"pageName"</span> <span class="meta">#新建页面</span></span><br><span class="line">hexo generate <span class="meta">#生成静态页面至public目录</span></span><br><span class="line">hexo <span class="keyword">server</span> <span class="meta">#开启预览访问端口（默认端口4000，'ctrl + c'关闭server）</span></span><br><span class="line">hexo deploy <span class="meta">#部署到GitHub</span></span><br><span class="line">hexo help  <span class="meta"># 查看帮助</span></span><br><span class="line">hexo version  <span class="meta">#查看Hexo的版本</span></span><br></pre></td></tr></table></figure><p>缩写：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo n == hexo new</span><br><span class="line">hexo g == hexo generate</span><br><span class="line">hexo s == hexo server</span><br><span class="line">hexo d == hexo deploy</span><br></pre></td></tr></table></figure><p>组合命令：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">hexo</span> s -g <span class="comment">#生成并本地预览</span></span><br><span class="line">hexo d -g <span class="comment">#生成并上传</span></span><br></pre></td></tr></table></figure><h2 id="5-config-yml"><a href="#5-config-yml" class="headerlink" title="5. _config.yml"></a>5. _config.yml</h2><p>这里面都是一些全局配置，每个参数的意思都比较简单明了，所以就不作详细介绍了。</p><p>需要特别注意的地方是，冒号后面必须有一个空格，否则可能会出问题。</p><h2 id="6-写博客"><a href="#6-写博客" class="headerlink" title="6. 写博客"></a>6. 写博客</h2><p>定位到我们的blog根目录，执行命令：</p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo <span class="keyword">new</span> <span class="string">'my-first-blog'</span></span><br></pre></td></tr></table></figure><p>hexo会帮我们在<code>_posts</code>下生成相关md文件：</p><p><img src="/2018/06/11/hexo进阶/3.png" alt="&#39;创建第一个项目&#39;"></p><p>我们只需要打开这个文件就可以开始写博客了，默认生成如下内容：</p><p><img src="/2018/06/11/hexo进阶/4.png" alt="&quot;写博客&quot;"></p><p>那么<code>hexo new page &#39;postName&#39;</code>命令和<code>hexo new &#39;postName&#39;</code>有什么区别呢？</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new<span class="built_in"> page </span><span class="string">"my-second-blog"</span></span><br></pre></td></tr></table></figure><p><img src="/2018/06/11/hexo进阶/5.png" alt="&quot;生成如下&quot;"></p><p>最终部署时生成：<code>hexo\public\my-second-blog\index.html</code>，但是它不会作为文章出现在博文目录。</p><h2 id="7-工具"><a href="#7-工具" class="headerlink" title="7. 工具"></a>7. 工具</h2><p>这里我推荐大家用一款非常不错的软件：<a href="https://typora.io/" target="_blank" rel="noopener">trpora</a>     功能很强大!</p><h2 id="8-如何让博文列表不显示全部内容"><a href="#8-如何让博文列表不显示全部内容" class="headerlink" title="8. 如何让博文列表不显示全部内容"></a>8. 如何让博文列表不显示全部内容</h2><p>默认情况下，生成的博文目录会显示全部的文章内容，如何设置文章摘要的长度呢？</p><p>答案是在合适的位置加上<code>&lt;!--more--&gt;</code>即可，例如：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 前言</span><br><span class="line"></span><br><span class="line">使用github pages服务搭建博客的好处有：</span><br><span class="line"></span><br><span class="line">1. 全是静态文件，访问速度快；</span><br><span class="line">2. 免费方便，不用花一分钱就可以搭建一个自由的个人博客，不需要服务器不需要后台；</span><br><span class="line">3. 可以随意绑定自己的域名，不仔细看的话根本看不出来你的网站是基于github的；</span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--more--&gt;</span></span><br><span class="line"></span><br><span class="line">4. 数据绝对安全，基于github的版本管理，想恢复到哪个历史版本都行；</span><br><span class="line">5. 博客内容可以轻松打包、转移、发布到其它平台；</span><br><span class="line">6. 等等；</span><br></pre></td></tr></table></figure><p>最终效果：</p><p><img src="/2018/06/11/hexo进阶/6.png" alt="&quot;模板效果&quot;"></p><h2 id="9-最终效果"><a href="#9-最终效果" class="headerlink" title="9. 最终效果"></a>9. 最终效果</h2><p>可以访问我的git博客来查看效果： <a href="https://lujiuxiang.github.io/" target="_blank" rel="noopener">https://lujiuxiang.github.io/</a></p><h2 id="10-参考"><a href="#10-参考" class="headerlink" title="10.参考"></a>10.参考</h2><p><a href="http://www.cnblogs.com/zhcncn/p/4097881.html" target="_blank" rel="noopener"><a href="http://www.cnblogs.com/zhcncn/p/4097881.html" target="_blank" rel="noopener">http://www.cnblogs.com/zhcncn/p/4097881.html</a></a></p><p><a href="http://www.jianshu.com/p/05289a4bc8b2" target="_blank" rel="noopener"><a href="http://www.jianshu.com/p/05289a4bc8b2" target="_blank" rel="noopener">http://www.jianshu.com/p/05289a4bc8b2</a></a></p><p>【转载文章务必保留出处和署名，谢谢！】</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文参考自：&lt;a href=&quot;https://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html&lt;/a&gt; （转载请标明出处）&lt;/p&gt;
&lt;h2 id=&quot;1-修改主题&quot;&gt;&lt;a href=&quot;#1-修改主题&quot; class=&quot;headerlink&quot; title=&quot;1.修改主题&quot;&gt;&lt;/a&gt;1.修改主题&lt;/h2&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>基于Hexo和github搭建的博客</title>
    <link href="http://yoursite.com/2018/06/10/%E5%9F%BA%E4%BA%8Ehexo%E5%92%8Cgithub%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yoursite.com/2018/06/10/基于hexo和github搭建博客/</id>
    <published>2018-06-10T10:29:08.000Z</published>
    <updated>2018-06-11T01:35:23.832Z</updated>
    
    <content type="html"><![CDATA[<p>前言：电脑系统为window 10专业版，64位<br>本文参考自：<a href="https://www.cnblogs.com/fengxiongZz/p/7707219.html" target="_blank" rel="noopener">https://www.cnblogs.com/fengxiongZz/p/7707219.html</a> （转载请标明出处，谢谢）</p><p>开始步骤：</p><h4 id="1-安装Node-js和搭配好Node-js环境，打开cmd命令窗口，成功界面为下图"><a href="#1-安装Node-js和搭配好Node-js环境，打开cmd命令窗口，成功界面为下图" class="headerlink" title="1.安装Node.js和搭配好Node.js环境，打开cmd命令窗口，成功界面为下图"></a>1.安装Node.js和搭配好Node.js环境，打开cmd命令窗口，成功界面为下图</h4><a id="more"></a><p><img src="/2018/06/10/基于hexo和github搭建博客/node.jpg" alt="&quot;成功下载node&quot;"></p><h4 id="2-安装Git和哦诶只好Git环境（安装成功后，在电脑的任意文件夹下空白区域右键出现下图）"><a href="#2-安装Git和哦诶只好Git环境（安装成功后，在电脑的任意文件夹下空白区域右键出现下图）" class="headerlink" title="2.安装Git和哦诶只好Git环境（安装成功后，在电脑的任意文件夹下空白区域右键出现下图）"></a>2.安装Git和哦诶只好Git环境（安装成功后，在电脑的任意文件夹下空白区域右键出现下图）</h4><p><img src="/2018/06/10/基于hexo和github搭建博客/git.png" alt="&quot;成功安装git&quot;"></p><p>注意：一般出于安全考虑，只有在Git Bash Here中才能进行Git的相关操作。如果需要在cmd命令行里调用Git，那么就要配置电脑的环境变量Path，或者在安装的时候选择use Git from the Windows Command Prompt。这个可有可无，影响不大，成功配置的界面如图</p><p><img src="/2018/06/10/基于hexo和github搭建博客/git2.jpg" alt="&quot;配置成功&quot;"></p><h4 id="3-Github账户注册和新建项目，项目必须要遵守格式：账户名-github-io-并且需要勾选Initialize-this-repository-with-a-README"><a href="#3-Github账户注册和新建项目，项目必须要遵守格式：账户名-github-io-并且需要勾选Initialize-this-repository-with-a-README" class="headerlink" title="3.Github账户注册和新建项目，项目必须要遵守格式：账户名.github.io 并且需要勾选Initialize this repository with a README"></a>3.Github账户注册和新建项目，项目必须要遵守格式：账户名.github.io 并且需要勾选Initialize this repository with a README</h4><p><img src="/2018/06/10/基于hexo和github搭建博客/githubzhuce.png" alt="&quot;github注册&quot;"></p><p>在建好的项目右侧有个settings按钮，点击它，向下拉到GitHub Pages，你会看到那边有个网址，访问它，你将会惊奇的发现该项目已经被部署到网络上，能够通过外网来访问它。</p><p><img src="/2018/06/10/基于hexo和github搭建博客/githubwancheng.jpg" alt="&quot;github完成&quot;"></p><h4 id="4-开始我们的-Hexo-的安装，在自己认为合适的地方创个文件夹，我是在D盘建了一个blog文件夹。然后通过命令行进入到该文件夹里面-接着输入npm-install-hexo-g，开始安装Hexo"><a href="#4-开始我们的-Hexo-的安装，在自己认为合适的地方创个文件夹，我是在D盘建了一个blog文件夹。然后通过命令行进入到该文件夹里面-接着输入npm-install-hexo-g，开始安装Hexo" class="headerlink" title="4.开始我们的 Hexo 的安装，在自己认为合适的地方创个文件夹，我是在D盘建了一个blog文件夹。然后通过命令行进入到该文件夹里面  接着输入npm install hexo -g，开始安装Hexo"></a>4.开始我们的 Hexo 的安装，在自己认为合适的地方创个文件夹，我是在D盘建了一个blog文件夹。然后通过命令行进入到该文件夹里面  接着输入npm install hexo -g，开始安装Hexo</h4><p><img src="/2018/06/10/基于hexo和github搭建博客/01.jpg" alt="&quot;hexo安装成功&quot;"></p><p>安装完成后输入hexo -v，检查是否安装成功</p><p><img src="/2018/06/10/基于hexo和github搭建博客/02.jpg" alt="&quot;hexo安装成功&quot;"></p><p>接着输入hexo init，初始化此文件夹</p><p><img src="/2018/06/10/基于hexo和github搭建博客/03.jpg" alt="&quot;hexo初始化成功&quot;"></p><p>看到后面的“Start blogging with Hexo！”就代表已经安装成功了！</p><p>然后我们接着输入npm install，安装所需要的组件</p><p><img src="/2018/06/10/基于hexo和github搭建博客/04.jpg" alt="&quot;hexo组件安装成功&quot;"></p><p>输入hexo g，首次体验Hexo 并 输入hexo s，开启服务器，访问该网址，正式体验Hexo</p><p><img src="/2018/06/10/基于hexo和github搭建博客/05.jpg" alt="&quot;hexo开启成功&quot;"></p><p>那么出现如下图就成功了</p><p><img src="/2018/06/10/基于hexo和github搭建博客/hexofinish.png" alt="&quot;hexo成功&quot;"></p><p>ps：假如页面一直无法跳转，那么可能端口被占用了。此时我们ctrl+c停止服务器，接着输入“hexo server -p 端口号”来改变端口号</p><p><img src="/2018/06/10/基于hexo和github搭建博客/shibai.png" alt="&quot;hexo端口启动失败&quot;"></p><h4 id="5-将Hexo与Github-page联系起来，设置Git的user-name和email（如果是第一次的话）。在其文件夹里面鼠标右键，点击Git-Base-Here。这里“lujiuxiang”可以替换成自己的用户名，邮箱可以替换成自己的邮箱"><a href="#5-将Hexo与Github-page联系起来，设置Git的user-name和email（如果是第一次的话）。在其文件夹里面鼠标右键，点击Git-Base-Here。这里“lujiuxiang”可以替换成自己的用户名，邮箱可以替换成自己的邮箱" class="headerlink" title="5.将Hexo与Github page联系起来，设置Git的user name和email（如果是第一次的话）。在其文件夹里面鼠标右键，点击Git Base Here。这里“lujiuxiang”可以替换成自己的用户名，邮箱可以替换成自己的邮箱"></a>5.将Hexo与Github page联系起来，设置Git的user name和email（如果是第一次的话）。在其文件夹里面鼠标右键，点击Git Base Here。这里“lujiuxiang”可以替换成自己的用户名，邮箱可以替换成自己的邮箱</h4><p><img src="/2018/06/10/基于hexo和github搭建博客/1.png" alt="&quot;hexo与github关联&quot;"></p><p>接着输入cd ~/.ssh，检查是否有.ssh的文件夹</p><p><img src="/2018/06/10/基于hexo和github搭建博客/ssh.png" alt="&quot;hexo与github关联&quot;"></p><p>输入ls，列出该文件下的内容。下图说明存在</p><p><img src="/2018/06/10/基于hexo和github搭建博客/ls.png" alt="&quot;hexo与github关联&quot;"></p><p>输入ssh-keygen -t rsa -C <a href="mailto:1173284559@qq.com" target="_blank" rel="noopener">1173284559@qq.com</a>”，连续三个回车，生成密钥，最后得到了两个文件：id_rsa和id_rsa.pub（默认存储路径是：C:\Users\Administrator.ssh）。</p><p><img src="/2018/06/10/基于hexo和github搭建博客/key.png" alt="&quot;hexo与github关联&quot;"></p><p>输入eval “$(ssh-agent -s)”，添加密钥到ssh-agent</p><p><img src="/2018/06/10/基于hexo和github搭建博客/eval.png" alt="&quot;hexo与github关联&quot;"></p><p>再输入ssh-add ~/.ssh/id_rsa，添加生成的SSH key到ssh-agent</p><p><img src="/2018/06/10/基于hexo和github搭建博客/sshadd.png" alt="&quot;hexo与github关联&quot;"></p><p>登录Github，点击头像下的settings，添加ssh</p><p><img src="/2018/06/10/基于hexo和github搭建博客/tianjia.png" alt="&quot;hexo与github关联&quot;"></p><p>新建一个new ssh key，将id_rsa.pub文件里的内容复制上去</p><p><img src="/2018/06/10/基于hexo和github搭建博客/newssh.png" alt="&quot;hexo与github关联&quot;"></p><p>输入ssh -T <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>，测试添加ssh是否成功。如果看到Hi后面是你的用户名，就说明成功了</p><p><img src="/2018/06/10/基于hexo和github搭建博客/success.png" alt="&quot;hexo与github关联&quot;"></p><h4 id="问题：假如ssh-key配置失败，那么只要以下步骤就能完全解决"><a href="#问题：假如ssh-key配置失败，那么只要以下步骤就能完全解决" class="headerlink" title="问题：假如ssh-key配置失败，那么只要以下步骤就能完全解决"></a>问题：假如ssh-key配置失败，那么只要以下步骤就能完全解决</h4><p>首先，清除所有的key-pair<br>ssh-add -D<br>rm -r ~/.ssh<br>删除你在github中的public-key</p><p>重新生成ssh密钥对<br>ssh-keygen -t rsa -C “<a href="mailto:xxx@xxx.com" target="_blank" rel="noopener">xxx@xxx.com</a>“</p><p>接下来正常操作<br>在github上添加公钥public-key:<br>1、首先在你的终端运行 xclip -sel c ~/.ssh/id_rsa.pub将公钥内容复制到剪切板<br>2、在github上添加公钥时，直接复制即可<br>3、保存</p><p>测试：<br>在终端 ssh -T <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a></p><h4 id="6、配置Deployment，在其文件夹中，找到-config-yml文件，修改repo值（在末尾）"><a href="#6、配置Deployment，在其文件夹中，找到-config-yml文件，修改repo值（在末尾）" class="headerlink" title="6、配置Deployment，在其文件夹中，找到_config.yml文件，修改repo值（在末尾）"></a>6、配置Deployment，在其文件夹中，找到_config.yml文件，修改repo值（在末尾）</h4><p><img src="/2018/06/10/基于hexo和github搭建博客/07.jpg" alt="&quot;hexo与github关联&quot;"></p><p>repo值是你在github项目里的ssh（右下角）</p><p><img src="/2018/06/10/基于hexo和github搭建博客/08.jpg" alt="&quot;hexo与github关联&quot;"><br><img src="/2018/06/10/基于hexo和github搭建博客/09.jpg" alt="&quot;hexo与github关联&quot;"></p><h4 id="7、新建一篇博客，在cmd执行命令：hexo-new-post-“博客名”"><a href="#7、新建一篇博客，在cmd执行命令：hexo-new-post-“博客名”" class="headerlink" title="7、新建一篇博客，在cmd执行命令：hexo new post “博客名”"></a>7、新建一篇博客，在cmd执行命令：hexo new post “博客名”</h4><p><img src="/2018/06/10/基于hexo和github搭建博客/10.jpg" alt="&quot;hexo与github关联&quot;"></p><p>这时候在文件夹_posts目录下将会看到已经创建的文件</p><p><img src="/2018/06/10/基于hexo和github搭建博客/11.jpg" alt="&quot;hexo与github关联&quot;"></p><p>在生成以及部署文章之前，需要安装一个扩展：npm install hexo-deployer-git –save</p><p><img src="/2018/06/10/基于hexo和github搭建博客/12.png" alt="&quot;hexo与github关联&quot;"></p><p>使用编辑器编好文章，那么就可以使用命令：hexo d -g，生成以及部署了</p><p><img src="/2018/06/10/基于hexo和github搭建博客/13.png" alt="&quot;hexo与github关联&quot;"></p><p>部署成功后访问你的地址：http://用户名.github.io。那么将看到生成的文章</p><p><img src="/2018/06/10/基于hexo和github搭建博客/14.png" alt="&quot;hexo与github关联&quot;"></p><p>好了，最基本的也是最全面的hexo+github搭建博客完结啦！。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前言：电脑系统为window 10专业版，64位&lt;br&gt;本文参考自：&lt;a href=&quot;https://www.cnblogs.com/fengxiongZz/p/7707219.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.cnblogs.com/fengxiongZz/p/7707219.html&lt;/a&gt; （转载请标明出处，谢谢）&lt;/p&gt;
&lt;p&gt;开始步骤：&lt;/p&gt;
&lt;h4 id=&quot;1-安装Node-js和搭配好Node-js环境，打开cmd命令窗口，成功界面为下图&quot;&gt;&lt;a href=&quot;#1-安装Node-js和搭配好Node-js环境，打开cmd命令窗口，成功界面为下图&quot; class=&quot;headerlink&quot; title=&quot;1.安装Node.js和搭配好Node.js环境，打开cmd命令窗口，成功界面为下图&quot;&gt;&lt;/a&gt;1.安装Node.js和搭配好Node.js环境，打开cmd命令窗口，成功界面为下图&lt;/h4&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
